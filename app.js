// –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const appData = {
  defaultBookmarks: [
    { id: "1", name: "YouTube", url: "https://youtube.com" },
    { id: "2", name: "VK", url: "https://vk.com" },
    { id: "3", name: "Mail.ru", url: "https://mail.ru" },
    { id: "4", name: "GitHub", url: "https://github.com" },
    { id: "5", name: "Wikipedia", url: "https://ru.wikipedia.org" }
  ],
  yandexServices: [
    { name: "–ö–∞—Ä—Ç—ã", url: "https://maps.yandex.ru", icon: "üó∫Ô∏è" },
    { name: "–ü–æ—á—Ç–∞", url: "https://mail.yandex.ru", icon: "‚úâÔ∏è" },
    { name: "–ü–æ–≥–æ–¥–∞", url: "https://yandex.ru/pogoda", icon: "üå§Ô∏è" },
    { name: "–ú—É–∑—ã–∫–∞", url: "https://music.yandex.ru", icon: "üéµ" },
    { name: "–î–∏—Å–∫", url: "https://disk.yandex.ru", icon: "üíæ" }
  ],
  googleServices: [
    { name: "Gmail", url: "https://mail.google.com", icon: "‚úâÔ∏è" },
    { name: "–ö–æ–Ω—Ç–∞–∫—Ç—ã", url: "https://contacts.google.com", icon: "üë§" },
    { name: "–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫", url: "https://translate.google.com", icon: "üî§" },
    { name: "–§–æ—Ç–æ", url: "https://photos.google.com", icon: "üì∑" },
    { name: "–î–∏—Å–∫", url: "https://drive.google.com", icon: "üíæ" },
    { name: "Keep", url: "https://keep.google.com", icon: "üìù" },
    { name: "Play –ú–∞—Ä–∫–µ—Ç", url: "https://play.google.com", icon: "üì±" },
    { name: "YouTube", url: "https://youtube.com", icon: "‚ñ∂Ô∏è" }
  ]
};

// –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
let editingBookmarkIndex = -1;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener("DOMContentLoaded", () => {
  initializeApp();
});

function initializeApp() {
  loadCurrencyRates();
  renderYandexServices();
  initializeBookmarks();
  setupEventListeners();
  setupGoogleServices();
}

/* –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ */
function getFaviconUrl(url) {
  try {
    const domain = new URL(url).hostname;
    return `https://www.google.com/s2/favicons?sz=32&domain_url=${domain}`;
  } catch {
    return "data:image/svg+xml,";
  }
}

/* –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç (–¥–µ–º–æ) */
async function loadCurrencyRates() {
  try {
    setTimeout(() => {
      document.getElementById("usd-rate").textContent = "95.50";
      document.getElementById("eur-rate").textContent = "103.20";
    }, 1000);
  } catch (e) {
    document.getElementById("usd-rate").textContent = "–Ω/–¥";
    document.getElementById("eur-rate").textContent = "–Ω/–¥";
  }
}

/* –Ø–Ω–¥–µ–∫—Å-—Å–µ—Ä–≤–∏—Å—ã: —Å—Å—ã–ª–∫–∏ –≤ —Ç–æ–π –∂–µ –≤–∫–ª–∞–¥–∫–µ */
function renderYandexServices() {
  const grid = document.getElementById("yandex-services-grid");
  if (!grid) return;
  grid.innerHTML = "";

  appData.yandexServices.forEach(s => {
    const a = document.createElement("a");
    a.className = "service-item";
    a.href = s.url; // –±–µ–∑ target ‚Äî –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –≤–∫–ª–∞–¥–∫–µ
    a.innerHTML = `
      <div class="service-icon">${s.icon}</div>
      <div class="service-name">${s.name}</div>
    `;
    // –ù–æ—Ä–º–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ —É–∂–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—Ä–µ–¥–Ω—é—é –∫–Ω–æ–ø–∫—É –º—ã—à–∏ –Ω–∞—Ç–∏–≤–Ω–æ,
    // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.
    grid.appendChild(a);
  });
}

/* –ó–∞–∫–ª–∞–¥–∫–∏ */
function initializeBookmarks() {
  const stored = JSON.parse(localStorage.getItem("bookmarks") || "[]");
  if (!stored.length) {
    localStorage.setItem("bookmarks", JSON.stringify(appData.defaultBookmarks));
  }
  renderBookmarks();
}

function renderBookmarks() {
  const grid = document.getElementById("bookmarks-grid");
  if (!grid) return;

  const data = JSON.parse(localStorage.getItem("bookmarks") || "[]");
  grid.innerHTML = "";

  data.forEach((b, idx) => {
    const item = document.createElement("div");
    item.className = "bookmark-item";
    item.draggable = true;
    item.dataset.index = idx;

    item.innerHTML = `
      <img class="bookmark-icon" alt="" src="${getFaviconUrl(b.url)}"/>
      <div class="bookmark-name">${b.name}</div>
      <div class="bookmark-actions">
        <button class="bookmark-edit" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">‚úé</button>
        <button class="bookmark-delete" title="–£–¥–∞–ª–∏—Ç—å">‚úï</button>
      </div>
    `;

    // –õ–ö–ú –ø–æ –∫–∞—Ä—Ç–æ—á–∫–µ ‚Äî –Ω–∞–≤–∏–≥–∞—Ü–∏—è –≤ —ç—Ç–æ–π –∂–µ –≤–∫–ª–∞–¥–∫–µ
    item.addEventListener("click", (e) => {
      if (e.target.closest(".bookmark-actions")) return; // –Ω–µ –Ω–∞–≤–∏–≥–∏—Ä—É–µ–º –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ –∫–Ω–æ–ø–∫–∞–º
      // –ï—Å–ª–∏ –∫–ª–∏–∫ —Å—Ä–µ–¥–Ω–µ–π –∫–Ω–æ–ø–∫–æ–π ‚Äî —ç—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç (–æ–Ω –¥–ª—è click/LKM),
      // –æ—Ç–¥–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è MMB –Ω–∏–∂–µ.
      location.href = b.url;
    });

    // –°—Ä–µ–¥–Ω—è—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏ (MMB) ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º mousedown, –ø–æ—Ç–æ–º—É —á—Ç–æ —É div –Ω–µ—Ç –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏.
    item.addEventListener("mousedown", (e) => {
      if (e.button === 1) { // 1 ‚Äî —Å—Ä–µ–¥–Ω—è—è –∫–Ω–æ–ø–∫–∞
        e.preventDefault(); // —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–ª–æ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        window.open(b.url, "_blank", "noopener");
      }
    });

    // –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    item.querySelector(".bookmark-edit").addEventListener("click", (e) => {
      e.stopPropagation();
      openEditBookmark(idx);
    });
    item.querySelector(".bookmark-delete").addEventListener("click", (e) => {
      e.stopPropagation();
      deleteBookmark(idx);
    });

    // Drag & drop
    item.addEventListener("dragstart", dragStart);
    item.addEventListener("dragover", dragOver);
    item.addEventListener("drop", drop);
    item.addEventListener("dragend", dragEnd);

    grid.appendChild(item);
  });
}

function setupEventListeners() {
  const addBtn = document.getElementById("add-bookmark-btn");
  const addModal = document.getElementById("addBookmarkModal");
  const editModal = document.getElementById("editBookmarkModal");

  addBtn?.addEventListener("click", () => {
    addModal.classList.remove("hidden");
    addModal.setAttribute("aria-hidden", "false");
    document.getElementById("bookmarkName").focus();
  });

  document.querySelectorAll("[data-close]").forEach(b => {
    b.addEventListener("click", closeModals);
  });

  document.getElementById("saveBookmarkBtn")?.addEventListener("click", saveBookmark);
  document.getElementById("updateBookmarkBtn")?.addEventListener("click", updateBookmark);

  [addModal, editModal].forEach(m => {
    m?.addEventListener("click", (e) => {
      if (e.target === m) closeModals();
    });
  });
}

function closeModals() {
  document.querySelectorAll(".modal").forEach(m => {
    m.classList.add("hidden");
    m.setAttribute("aria-hidden", "true");
  });
  editingBookmarkIndex = -1;
}

function saveBookmark() {
  const name = document.getElementById("bookmarkName").value.trim();
  const url = document.getElementById("bookmarkUrl").value.trim();
  if (!name || !url) return;

  const data = JSON.parse(localStorage.getItem("bookmarks") || "[]");
  data.push({ id: String(Date.now()), name, url });
  localStorage.setItem("bookmarks", JSON.stringify(data));
  closeModals();
  renderBookmarks();
}

function openEditBookmark(index) {
  editingBookmarkIndex = index;
  const data = JSON.parse(localStorage.getItem("bookmarks") || "[]");
  const b = data[index];
  if (!b) return;
  document.getElementById("editBookmarkName").value = b.name;
  document.getElementById("editBookmarkUrl").value = b.url;
  const modal = document.getElementById("editBookmarkModal");
  modal.classList.remove("hidden");
  modal.setAttribute("aria-hidden", "false");
  document.getElementById("editBookmarkName").focus();
}

function updateBookmark() {
  if (editingBookmarkIndex < 0) return;
  const name = document.getElementById("editBookmarkName").value.trim();
  const url = document.getElementById("editBookmarkUrl").value.trim();
  const data = JSON.parse(localStorage.getItem("bookmarks") || "[]");
  data[editingBookmarkIndex] = { ...data[editingBookmarkIndex], name, url };
  localStorage.setItem("bookmarks", JSON.stringify(data));
  closeModals();
  renderBookmarks();
}

function deleteBookmark(index) {
  const data = JSON.parse(localStorage.getItem("bookmarks") || "[]");
  data.splice(index, 1);
  localStorage.setItem("bookmarks", JSON.stringify(data));
  renderBookmarks();
}

/* Drag & drop */
let dragSrcIndex = -1;
function dragStart(e){ dragSrcIndex = Number(e.currentTarget.dataset.index); e.dataTransfer.effectAllowed = "move"; }
function dragOver(e){ e.preventDefault(); e.dataTransfer.dropEffect = "move"; }
function drop(e){
  e.stopPropagation();
  const targetIndex = Number(e.currentTarget.dataset.index);
  if (dragSrcIndex === targetIndex) return;
  const data = JSON.parse(localStorage.getItem("bookmarks") || "[]");
  const [moved] = data.splice(dragSrcIndex, 1);
  data.splice(targetIndex, 0, moved);
  localStorage.setItem("bookmarks", JSON.stringify(data));
  renderBookmarks();
}
function dragEnd(){ dragSrcIndex = -1; }

/* –ó–∞–≥–ª—É—à–∫–∞ –Ω–∞ –±—É–¥—É—â–µ–µ ‚Äî –µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏–∫–∞ —Å–∞–π–¥–±–∞—Ä–∞ Google */
function setupGoogleServices(){ /* —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–ø–∏—Å–æ–∫ –≤ index.html */ }
